[build-system]
requires = ["setuptools>=61.0"]
build-backend = "setuptools.build_meta"

[project]
name = "zaku"
version = "0.0.18"
description = "Zaku Task Queue is for distributed ML-workloads."
readme = "README.md"
license = { text = "MIT" }
requires-python = ">=3.7"
classifiers = [
    "Development Status :: 3 - Alpha",
    "Programming Language :: Python",
]
dependencies = [
    "params-proto>=2.11.16",
    "pillow",
    "msgpack",
    "numpy>=1.21", # because we require numpy.typing.NDArray
    "websockets",
    "motor>=3.0.0",  # Async MongoDB driver
    "pymongo>=4.0.0",  # MongoDB driver
]

[project.optional-dependencies]
# add the cors package, not needed in pyScript
all = [
    "asyncio",
    "aiohttp",
    "aiohttp-cors",
    "killport",
    "redis",
    "motor>=3.0.0",
    "pymongo>=4.0.0",
]
examples = [
    "aiohttp",
    "aiohttp-cors",
    "cmx",
    "functional_notations",
    "killport",
    "ml_logger",
    "opencv-python",
    "open3d>=0.17.0",
    "redis",
    "trimesh",
    "motor>=3.0.0",
    "pymongo>=4.0.0",
]
dev = [
    "restructuredtext-lint",
    "twine",
    "aiohttp",
    "aiohttp-cors",
    "black==22.3.0",
    "killport",
    "redis",
    "motor>=3.0.0",
    "pymongo>=4.0.0",
    "pylint==2.13.4",
    "pytest==7.1.2",
    "sphinx==7.1.2",
    "sphinx-autobuild",
    "pytest-asyncio",
    "pytest-dependency",
    "furo",
    "sphinx_copybutton",
    "myst_parser",
    # these are very optional, but needed for the doc site
    "trimesh",
    "tqdm",
]

[project.scripts]
# Note, add entrypoint name to scripts/completions/install.py to include CLI completion
zaku = "zaku.server:entry_point"

[tool.setuptools.packages.find]
include = ["zaku*"]

[tool.setuptools.package-data]
"*" = ["*.json"]

# pylint
[tool.pylint.messages_control]
max-line-length = 120
generated-members = []
good-names-rgxs = "^[_a-zA-Z][_a-z0-9]?$"
ignore-paths = []
jobs = 0
ignored-classes = ["TensorDataclass"]

disable = [
    "duplicate-code",
    "fixme",
    "logging-fstring-interpolation",
    "too-many-arguments",
    "too-many-branches",
    "too-many-instance-attributes",
    "too-many-locals",
    "unnecessary-ellipsis",
]

#pytest
#[tool.pytest.ini_options]
#addopts = "-n=4 --typeguard-packages=zaku --disable-warnings"
#testpaths = [
#    "tests",
#]

# pyright
[tool.pyright]
include = ["zaku"]
exclude = ["**/node_modules", "**/__pycache__", ]
#ignore = ["nerf_zaku"]
defineConstant = { DEBUG = true }

reportMissingImports = true
reportMissingTypeStubs = false
reportPrivateImportUsage = false
reportUndefinedVariable = false

#pythonVersion = "3.8"
#pythonPlatform = "Linux"
